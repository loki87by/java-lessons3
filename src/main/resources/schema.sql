CREATE TABLE IF NOT EXISTS users (
    id bigint generated by default as identity NOT NULL,
    name VARCHAR(255) default 'noname user',
    email VARCHAR(512) NOT NULL
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
    );

CREATE TABLE IF NOT EXISTS items (
    id bigint generated by default as identity NOT NULL,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(512) default 'no description',
    is_booked boolean default false,
    owner_id bigint NOT NULL,
    CONSTRAINT pk_item PRIMARY KEY (id),
    CONSTRAINT fk_item_owner
        foreign key (owner_id)
            references users (id)
    );

CREATE TABLE IF NOT EXISTS booking (
    id bigint generated by default as identity NOT NULL,
    start_date timestamp NOT NULL,
    end_date timestamp NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    booking_STATE int default 0,
    owner_id bigint NOT NULL,
    CONSTRAINT pk_booking PRIMARY KEY (id),
    CONSTRAINT fk_booking_owner
        foreign key (owner_id)
            references users (id)
    item_id bigint NOT NULL,
    CONSTRAINT fk_booking_item
        foreign key (item_id)
            references items (id)
    );

CREATE TABLE IF NOT EXISTS item_requests (
    id bigint generated by default as identity NOT NULL,
    req_item_name VARCHAR(255) NOT NULL,
    owner_id bigint NOT NULL,
    CONSTRAINT pk_item_request PRIMARY KEY (id),
    CONSTRAINT fk_item_request_owner
        foreign key (owner_id)
            references users (id)
    resp_item_id bigint default NULL,
    CONSTRAINT fk_item_requests_item
        foreign key (resp_item_id)
            references items (id)
    );

CREATE TABLE IF NOT EXISTS feedbacks (
    id bigint generated by default as identity NOT NULL,
    description VARCHAR(200) NOT NULL,
    feedback_date timestamp NOT NULL,
    owner_id bigint NOT NULL,
    CONSTRAINT pk_feedback PRIMARY KEY (id),
    CONSTRAINT fk_feedback_owner
        foreign key (owner_id)
            references users (id)
    item_id bigint default NULL,
    CONSTRAINT fk_feedback_item
        foreign key (resp_item_id)
            references items (id)
    );